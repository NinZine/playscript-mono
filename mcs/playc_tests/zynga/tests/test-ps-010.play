package
{
	import com.adobe.test.Assert;

	public class conversions
	{
		static function NumberToInt():int
		{
			var d:Number = 4;
			var i:int;
			
			i = d;
			Assert.expectEq("i == 4", true, i == 4);

			d = uint.MaxValue;
			i = d;
			Assert.expectEq("i == -1", true, i == -1);

			d = int.MinValue;
			i = d;
			Assert.expectEq("i == -2147483648", true, i == -2147483648);

			d = NaN;
			i = d;
			// TODO: Mono bug https://bugzilla.xamarin.com/show_bug.cgi?id=13927
			//if (i != 0)
			//	return 4;

			return 0;
		}
		
		static function IntToUInt ():int
		{
			var i:int = -1;
			var u:uint = i;
			Assert.expectEq("u == 4294967295", true, u == 4294967295);
			
			i = u - 1;
			Assert.expectEq("i == -2", true, i == -2);
			
			return 0;
		}
	
		public static function Main():int
		{
			var res:int;
			res = IntToUInt ();
			Assert.expectEq("res == 0", true, res == 0);
			
			res = NumberToInt ();
			Assert.expectEq("res == 0", true, res == 0);
			
			return 0;
		}
	}
}
